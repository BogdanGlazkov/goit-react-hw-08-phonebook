{"version":3,"file":"static/js/354.7e0e8f5c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts-list/Contacts-list.module.css?1416","components/Contacts-list/Contacts-list.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactPage.module.css?b217","pages/ContactPage/ContactPage.jsx","../node_modules/@mui/icons-material/ContactPhone.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["export const selectContact = state => state.contacts.contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/slice';\nimport s from './Filter.module.css';\n\nexport const FilterList = () => {\n    const [queryParams, setQueryParams] = useSearchParams();\n    const contacts = useSelector(selectContact);\n    const dispatch = useDispatch();\n\n    const onFilterChange = e => {\n        const value = e.target.value.trim();\n\n        dispatch(setFilter(value));\n        setQueryParams(value === '' ? {} : { query: value });\n    };\n\n    if (contacts.length === 0) {\n        return;\n    };\n\n    return (\n        <label className='label'>\n            <span className={s.label}>Find contacts by name</span>\n            <input\n                className={s.input}\n                onChange={onFilterChange}\n                type=\"text\"\n                value={queryParams.value}\n                name=\"filter\"\n                placeholder=\"Start typing the name...\"\n            />\n        </label>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts-list_wrapper__4cfoZ\",\"list\":\"Contacts-list_list__f9BVg\",\"item\":\"Contacts-list_item__leVYG\",\"text\":\"Contacts-list_text__dStqy\",\"tel\":\"Contacts-list_tel__c1YFg\",\"btn\":\"Contacts-list_btn__9SrUC\"};","import { useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { selectAuth } from 'redux/auth/selectors';\nimport Button from '@mui/material/Button';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport s from './Contacts-list.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContact);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  const status = useSelector(selectAuth);\n\n  const filteredContacts = useMemo(() => {\n    return contacts.length ? contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase())\n    }) : [];\n  }, [contacts, filter]);\n\n  useEffect(() => {\n    if (status) {\n      dispatch(fetchContacts());\n    };\n  }, [dispatch, status]);\n\n  const elements = filteredContacts.map(({ id, name, phone }) => (\n    <li className={s.item} key={id}>\n      <p className={s.text}>\n        <ContactPhoneIcon sx={{ fontSize: 20, marginRight: 1 }} />\n        {name} <span className={s.tel}>Tel: {phone}</span>\n      </p>\n      <Button\n        variant='contained'\n        startIcon={<DeleteIcon />}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </Button>\n    </li>\n  ));\n\n  return <div className={s.wrapper}>\n    <ul className={s.list}>{elements}</ul>\n    </div>;\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userName: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"btn\":\"Form_btn__0ebGo\"};","import { useState } from 'react';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContact } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(value + \"is not a valid value\");\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const hasUserContacts = contacts.some(user => user.name === name);\n    \n    if (hasUserContacts) {\n      toast.warning(`${name} is already in contacts!`);\n      return;\n    };\n\n    dispatch(addContact({name, number}));\n    formReset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={onFormSubmit}>\n      <label>\n        <span className={s.label}>Name</span>\n        <input\n          className={s.input}\n          onChange={onInputChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"John Smith\"\n          required\n        />\n      </label>\n      <label>\n        <span className={s.label}>Number</span>\n        <input\n          className={s.input}\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"123-456-7890\"\n          required\n        />\n      </label>\n        <Button\n          disabled={name && number ? false : true}\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          <span>Add contact</span>\n        </Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactPage_wrapper__Csj47\"};","import { FilterList } from \"components/Filter/Filter\";\nimport { ContactsList } from \"components/Contacts-list\";\nimport {Form} from 'components/Form/Form';\nimport s from './ContactPage.module.css';\n\nconst ContactPage = () => {\n    return (\n        <>\n            <div className={s.wrapper}>\n                <Form />\n                <FilterList />\n                <ContactsList />\n            </div>\n        </>\n    );\n};\n\nexport default ContactPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z\"\n}), 'ContactPhone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["selectContact","state","contacts","FilterList","useSearchParams","queryParams","setQueryParams","useSelector","dispatch","useDispatch","length","className","s","onChange","e","value","target","trim","setFilter","query","type","name","placeholder","ContactsList","filter","status","selectAuth","filteredContacts","useMemo","toLowerCase","includes","useEffect","fetchContacts","elements","map","id","phone","ContactPhone","sx","fontSize","marginRight","Button","variant","startIcon","Delete","onClick","deleteContact","Form","useState","setName","number","setNumber","onInputChange","console","log","onSubmit","preventDefault","some","user","toast","addContact","pattern","title","required","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}